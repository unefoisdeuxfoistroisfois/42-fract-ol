Il faut make d'abord la minilibx et ensutie compile avec notre main en fessant 
- cc *.c -I minilibx-linux -L minilibx-linux -lmlx -lXext -lX11 (Pour Linux)
parfait si tu fais #include "mlx.h

- cc *.c -Lminilibx-linux -lmlx_Linux -lX11 -lXext
parfait si tu fais #include "minilibx-linux/mlx.h

######### AFFICHAGE DE LA MLX #########
LINUX
utiliser les header la la mlx avec #inlcude "mlx.h"

1. initialisé la mlx avec mlx_init(); qui elle renvoie un void pointeur.

2. creation de la nouvelle fenetre avec mlx_new_windows();
	elle contient en entrée mlx notre void pointeur crée au debut ensuite
	la taille, exemple 550 sur 500 et ensutie on lui donne un nom a notre
	mlx.
3. pour finir on utilise mlx_loop qui va nous aidé a zoomé avec la souris(je
pense)
MAC OS
   cc *.c -I minilibx_opengl_20191021 -L minilibx_opengl_20191021 -lmlx -framework OpenGL -framework AppKit


À quoi servent -I, -L, -l et -framework ?

-I <dir> : ajoute un chemin d’en-têtes (où trouver mlx.h).

-L <dir> : ajoute un chemin de bibliothèques (où trouver libmlx.a ou libmlx.dylib).

-lmlx : lie la bibliothèque nommée mlx (le linker cherche libmlx.* dans les dossiers fournis par -L).

-framework OpenGL -framework AppKit : lie les Frameworks systèmes de macOS (OpenGL pour le
